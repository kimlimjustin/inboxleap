services:
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: inboxleap-db
  #   environment:
  #     POSTGRES_USER: inboxleap
  #     POSTGRES_PASSWORD: inboxleap
  #     POSTGRES_DB: inboxleap
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U inboxleap"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: inboxleap-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://neondb_owner:npg_N2hpTlz4nHDY@ep-steep-wildflower-adf4bsmy-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require
      SESSION_SECRET: ${SESSION_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      APP_URL: ${APP_URL:-http://localhost:5000}
      SERVICE_EMAIL: ${SERVICE_EMAIL}
      SERVICE_EMAIL_PASSWORD: ${SERVICE_EMAIL_PASSWORD}
      SERVICE_IMAP_HOST: ${SERVICE_IMAP_HOST}
      SERVICE_IMAP_PORT: ${SERVICE_IMAP_PORT}
      SERVICE_SMTP_HOST: ${SERVICE_SMTP_HOST}
      SERVICE_SMTP_PORT: ${SERVICE_SMTP_PORT}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
    ports:
      - "3000:3000"
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inboxleap-frontend
    volumes:
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "5000:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge